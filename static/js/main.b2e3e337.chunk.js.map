{"version":3,"sources":["components/contacts/contacts.module.css","components/header/header.module.css","components/messages/messages.module.css","App.module.css","components/profile/profileInfo/profileinfo.module.css","components/profile/myPosts/myPosts.module.css","components/tasks/taskList/listItem/listItem.module.css","components/profile/profile.module.css","components/news/news.module.css","components/settings/settings.module.css","components/sidebar/sidebar.module.css","components/preloader/preloader.module.css","redux/reducers/messagesReducer.js","redux/reducers/headerReducer.js","redux/reducers/sidebarReducer.js","redux/reducers/tasksReducer.js","redux/reducers/contactsReducer.js","redux/reducers/profileReduсer.js","redux/reducers/authReduсer.js","redux/store.js","components/sidebar/sidebar.jsx","components/news/news.jsx","components/settings/settings.jsx","assets/images/avatar.webp","components/messages/messages.jsx","components/messages/messagesContainer.jsx","components/tasks/taskList/listItem/listItem.jsx","components/tasks/taskList/taskList.jsx","components/tasks/tasks.jsx","components/tasks/tasksContainer.jsx","assets/loading/loading.svg","components/preloader/preloader.jsx","components/contacts/contacts.jsx","components/contacts/contactsContainer.jsx","components/profile/profileInfo/profileInfo.jsx","components/profile/myPosts/myPosts.jsx","components/profile/profile.jsx","components/profile/profileContainer.jsx","components/header/header.jsx","components/header/headerContainer.jsx","App.js","index.js"],"names":["module","exports","ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","initialState","arrMessages","id","message","newMessageText","arrCommunity","name","avatar","messagesReducer","state","action","type","newMessage","length","updateMessage","headerItems","headerReducer","sidebarItems","sidebarReducer","ADD_TASK","UPDATE_NEW_TASK_TEXT","arrListData","description","completed","newTaskText","tasksReducer","newTask","updateTask","SHOW_MORE","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","arrUsers","pageSize","totalUsersCount","currentPage","isFetching","contactsReducer","map","c","userId","followed","users","SET_USER_PROFILE","ADD_POST","UPDATE_NEW_POST_TEXT","arrPosts","likesCounte","post","newPostText","profile","profileReducer","newPost","postText","SET_USER_DATA","login","email","isAuth","authReducer","newData","reducers","combineReducers","profilePage","messagesPage","tasksPage","contactsPage","auth","store","createStore","window","Sidebar","className","s","sidebar","item","activeClassName","active","to","News","Settings","Messages","props","community","community__item","item__name","avatarCapture","src","alt","messages","m","value","placeholder","onChange","event","updateNewMessageText","target","onClick","addMessage","MessagesContainer","this","React","Component","connect","ListItem","list__item","item__description","item__input","defaultChecked","TaskList","ToDoItem","i","Tasks","taskText","updateNewTaskText","addTask","TasksContainer","dispatch","updateNewTaskTextActionCreator","Preloader","loading","Contacts","pagesCount","Math","ceil","pages","push","contacts__page","p","onPageChanged","selectedPage","pageNumber","photos","small","unFollow","follow","status","ContactsContainer","setCurrentPage","toggleIsFetching","axios","then","response","setUsers","data","items","setTotalUsersCount","totalCount","showContacts","ProfileInfo","profileInfo","photos__small","fullName","photos__large","large","contacts","github","MyPosts","updateNewPostText","button","addPost","post__item","post__text","Profile","profile__posts","ProfileContainer","match","params","setUserProfile","WithUrlDataContainerComponent","withRouter","Header","menu","list","href","loginBlock","HeaderContainer","withCredentials","resultCode","setAuthUserData","App","page","page__header","page__sidebar","page__content","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b2e3e337.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__page\":\"contacts_contacts__page__3ZpEu\",\"community__item\":\"contacts_community__item__wsYvw\",\"item__description\":\"contacts_item__description__2T5NL\",\"item__name\":\"contacts_item__name__2oLLK\",\"avatarCapture\":\"contacts_avatarCapture__2LqI6\",\"selectedPage\":\"contacts_selectedPage__3cNYI\",\"pageNumber\":\"contacts_pageNumber__3rD0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"header_menu__3XOvN\",\"item\":\"header_item__2ourn\",\"item_active\":\"header_item_active__3ligU\",\"loginBlock\":\"header_loginBlock__V4w1S\",\"list\":\"header_list__1Zbdx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"community\":\"messages_community__RuPoA\",\"community__item\":\"messages_community__item__2AHpz\",\"messages\":\"messages_messages__2wORp\",\"avatarCapture\":\"messages_avatarCapture__N5HYT\",\"item__name\":\"messages_item__name__2umqE\",\"active\":\"messages_active__31G_i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page___ohDJ\",\"page__header\":\"App_page__header__nlZ3U\",\"page__sidebar\":\"App_page__sidebar__FqZcm\",\"page__profile\":\"App_page__profile__1vtlW\",\"page__content\":\"App_page__content__2I6tP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__img\":\"profileinfo_profile__img__1zLdn\",\"profileInfo\":\"profileinfo_profileInfo__2PLL0\",\"photos__small\":\"profileinfo_photos__small__1Bzcl\",\"photos__large\":\"profileinfo_photos__large__2C_Q_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post__item\":\"myPosts_post__item__ow4aV\",\"post__text\":\"myPosts_post__text__2gKSY\",\"button\":\"myPosts_button__E0RLG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__item\":\"listItem_list__item__3Xi_g\",\"item__description\":\"listItem_item__description__1P_0y\",\"item__input\":\"listItem_item__input__1Bgc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__1lJO8\",\"profile__posts\":\"profile_profile__posts__1a1PD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"news_item__2u6gy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"settings_item__3PIdc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__1FYwt\",\"item\":\"sidebar_item__1GsmI\",\"active\":\"sidebar_active__9ZPYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ld\":\"preloader_ld__2xUg0\",\"ldio-jz13tm5oo6k\":\"preloader_ldio-jz13tm5oo6k__1FTYq\",\"loading\":\"preloader_loading__2n_Lh\"};","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\n\r\nlet initialState = {\r\n    arrMessages: [\r\n        {id: 0, message: 'Hi! How are you?'},\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'What are you doing?'},\r\n        {id: 3, message: 'How is your study?'}\r\n    ],\r\n    newMessageText: '',\r\n    arrCommunity: [\r\n        {\r\n            id: 1,\r\n            name: 'Max',\r\n            avatar: 'https://cdn1.iconfinder.com/data/icons/avatars-55/100/avatar_profile_user_music_headphones_shirt_cool-512.png'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Olga',\r\n            avatar: 'https://cdn1.iconfinder.com/data/icons/users-avatars-2/128/girl_avatar_4-512.png'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Peter',\r\n            avatar: 'https://cdn1.iconfinder.com/data/icons/user-avatars-2/300/02-512.png'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'John',\r\n            avatar: 'https://cdn1.iconfinder.com/data/icons/user-avatars-2/300/07-512.png'\r\n        },\r\n    ]\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: state.arrMessages.length,\r\n                message: state.newMessageText\r\n            };\r\n            return {\r\n                ...state,\r\n                arrMessages: [...state.arrMessages, newMessage],\r\n                newMessageText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_MESSAGE_TEXT: {\r\n            return {\r\n                ...state,\r\n                newMessageText: action.updateMessage\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessage = () => ({type: ADD_MESSAGE});\r\nexport const updateNewMessageText = (updateMessage) => ({type: UPDATE_NEW_MESSAGE_TEXT, updateMessage});\r\n\r\nexport default messagesReducer;","let initialState = {\r\n    headerItems: [\r\n        'item1',\r\n        'item2',\r\n        'item3',\r\n        'item4'\r\n    ]\r\n};\r\n\r\n\r\nconst headerReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state\r\n}\r\n\r\nexport default headerReducer;","let initialState = {\r\n    sidebarItems: [\r\n        'item1',\r\n        'item2',\r\n        'item3',\r\n        'item4'\r\n    ]\r\n}\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","const ADD_TASK = 'ADD-TASK';\r\nconst UPDATE_NEW_TASK_TEXT = 'UPDATE-NEW-TASK-TEXT';\r\n\r\nlet initialState = {\r\n    arrListData: [\r\n        {id: 0, description: 'Сходить в магазин', completed: false},\r\n        {id: 1, description: 'Помыть кота', completed: false},\r\n        {id: 2, description: 'закончить тестовое задание', completed: false},\r\n        {id: 3, description: 'Подготовить презентацию', completed: false},\r\n        {id: 4, description: 'Посмотреть 100 лекций по react', completed: false}\r\n    ],\r\n    newTaskText: ''\r\n};\r\n\r\nconst tasksReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TASK: {\r\n            let newTask = {\r\n                id: state.arrListData.length,\r\n                description: state.newTaskText,\r\n                completed: false\r\n            };\r\n            return {\r\n                ...state,\r\n                arrListData: [...state.arrListData, newTask],\r\n                newTaskText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_TASK_TEXT: {\r\n            return {\r\n                ...state,\r\n                newTaskText: action.updateTask\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addTaskActionCreator = () => {\r\n    return {\r\n        type: ADD_TASK\r\n    }\r\n}\r\n\r\nexport const updateNewTaskTextActionCreator = (taskText) => {\r\n    return {\r\n        type: UPDATE_NEW_TASK_TEXT,\r\n        updateTask: taskText\r\n    }\r\n}\r\n\r\nexport default tasksReducer;","const SHOW_MORE = 'SHOW-MORE';\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\n\r\nlet initialState = {\r\n    arrUsers: [\r\n            // {\r\n            //     id: 1,\r\n            //     followed: true,\r\n            //     name: 'Max',\r\n            //     status: 'some status',\r\n            //     location: {city: 'San-Diego', country: 'USA'},\r\n            //     avatar: 'https://cdn1.iconfinder.com/data/icons/avatars-55/100/avatar_profile_user_music_headphones_shirt_cool-512.png'\r\n            // },\r\n            // {\r\n            //     id: 2,\r\n            //     followed: true,\r\n            //     name: 'Olga',\r\n            //     status: 'some status',\r\n            //     location: {city: 'Minsk', country: 'Belarus'},\r\n            //     avatar: 'https://cdn1.iconfinder.com/data/icons/users-avatars-2/128/girl_avatar_4-512.png'\r\n            // },\r\n            // {\r\n            //     id: 3,\r\n            //     followed: true,\r\n            //     name: 'Peter',\r\n            //     status: 'some status',\r\n            //     location: {city: 'NYC', country: 'USA'},\r\n            //     avatar: 'https://cdn1.iconfinder.com/data/icons/user-avatars-2/300/02-512.png'\r\n            // },\r\n            // {\r\n            //     id: 4,\r\n            //     followed: false,\r\n            //     name: 'John',\r\n            //     status: 'some status',\r\n            //     location: {city: 'Los0Angeles', country: 'USA'},\r\n            //     avatar: 'https://cdn1.iconfinder.com/data/icons/user-avatars-2/300/07-512.png'\r\n            // }\r\n    ],\r\n    pageSize: 7, //количество отображаемых на странице единиц информации (юзеров в нашем случае)\r\n    totalUsersCount: 20,\r\n    currentPage: 1, //задаём номер текущей страницы (при загрузке страницы)\r\n    isFetching: true\r\n};\r\n\r\nconst contactsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                arrUsers: state.arrUsers.map(c => {\r\n                    if (c.id === action.userId) {\r\n                        return {...c, followed: true}\r\n                    }\r\n                    return c;\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                arrUsers: state.arrUsers.map(c => {\r\n                    if (c.id === action.userId) {\r\n                        return {...c, followed: false}\r\n                    }\r\n                    return c;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return { ...state, arrUsers: action.users}\r\n        }\r\n        case SHOW_MORE: { return state}\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const showContacts = () => ({type: SHOW_MORE});\r\nexport const follow = (userId) => ({type: FOLLOW, userId});\r\nexport const unFollow = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n\r\nexport default contactsReducer;","const SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState = {\r\n        arrPosts: [\r\n            {id: 0, likesCounte: 15, post: 'Hi! How are you?'},\r\n            {id: 1, likesCounte: 12, post: 'This is my first post'},\r\n            {id: 2, likesCounte: 9, post: 'blablabla'},\r\n            {id: 3, likesCounte: 33, post: 'ahhrrrr'}\r\n        ],\r\n        newPostText: '',\r\n    profile: null\r\n    };\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: state.arrPosts.length,\r\n                likesCounte: 0,\r\n                post: state.newPostText\r\n            };\r\n            return {\r\n                ...state,\r\n                arrPosts: [...state.arrPosts, newPost],\r\n                newPostText: ''//возвращаем пустое поле ввода после добавления поста\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return { ...state, newPostText: action.postText};\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPost = () => ({type: ADD_POST});\r\nexport const updateNewPostText = (postText) => ({type: UPDATE_NEW_POST_TEXT, postText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport default profileReducer;","const SET_USER_DATA = 'SET-USER-DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return { ...state, ...action.newData, isAuth: true};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login) => ({type: SET_USER_DATA, newData: {userId, email, login}});\r\nexport default authReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport messagesReducer from \"./reducers/messagesReducer\";\r\nimport headerReducer from \"./reducers/headerReducer\";\r\nimport sidebarReducer from \"./reducers/sidebarReducer\";\r\nimport tasksReducer from \"./reducers/tasksReducer\";\r\nimport contactsReducer from \"./reducers/contactsReducer\";\r\nimport profileReducer from \"./reducers/profileReduсer\";\r\nimport authReducer from \"./reducers/authReduсer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    headerItems: headerReducer,\r\n    sidebarItems: sidebarReducer,\r\n    tasksPage: tasksReducer,\r\n    contactsPage: contactsReducer,\r\n    auth: authReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './sidebar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className={s.sidebar}>\r\n            <div><NavLink className={s.item} activeClassName={s.active} to='/profile'>Profile</NavLink></div>\r\n            <div><NavLink className={s.item} activeClassName={s.active} to='/contacts'>Contacts</NavLink></div>\r\n            <div><NavLink className={s.item} activeClassName={s.active} to='/messages'>Messages</NavLink></div>\r\n            <div><NavLink className={s.item} activeClassName={s.active} to='/tasks'>Tasks</NavLink></div>\r\n            <div><NavLink className={s.item} activeClassName={s.active} to='/news'>News</NavLink></div>\r\n            <div><NavLink className={s.item} activeClassName={s.active} to='/settings'>Settings</NavLink></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport s from './news.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.item}>\r\n            There are my news\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.item}>\r\n            There are my Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","export default __webpack_public_path__ + \"static/media/avatar.21d32664.webp\";","import React from 'react';\r\nimport s from './messages.module.css';\r\nimport avatar from \"../../assets/images/avatar.webp\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Messages = (props) => {\r\n\r\n    let onMessageChange = (event) => {\r\n        props.updateNewMessageText(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.community}>\r\n            <div className={s.community__item}>\r\n                {props.messagesPage.arrCommunity.map(c => {\r\n                    return <span key={c.id}>\r\n                        <div>\r\n                            <NavLink className={s.item__name} activeClassName={s.active} to={`/messages/${c.id}`}>\r\n                                <img className={s.avatarCapture}\r\n                                     src={c.avatar != null ? c.avatar : avatar}\r\n                                     alt={'аватарка'}\r\n                                />\r\n                                {c.name}\r\n                            </NavLink>\r\n                        </div>\r\n                     </span>\r\n                    })\r\n                }\r\n            </div>\r\n            <div>\r\n                <div className={s.messages}>\r\n                    {props.messagesPage.arrMessages.map(m =>\r\n                        <div key={m.id}>\r\n                            {m.message}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div>\r\n                    <textarea\r\n                        value={props.messagesPage.newMessageText}\r\n                        placeholder='please, enter your message'\r\n                        onChange={\r\n                            // () => props.updateNewMessageText()\r\n                            onMessageChange\r\n                        }\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick={() => props.addMessage()}>Send message</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport {addMessage, updateNewMessageText} from \"../../redux/reducers/messagesReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Messages from \"./messages\";\r\n\r\n\r\nclass MessagesContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    };\r\n\r\n    // componentDidMount() {\r\n    // }\r\n\r\n    render() {\r\n        return <Messages\r\n            messagesPage={this.props.messagesPage}\r\n            addMessage={this.props.addMessage}\r\n            updateNewMessageText={this.props.updateNewMessageText}\r\n        />\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {addMessage, updateNewMessageText})(MessagesContainer);","import React from 'react';\r\nimport s from './listItem.module.css';\r\n\r\nconst ListItem = (props) => {\r\n    return (\r\n        <div className={s.list__item}>\r\n            <div className={s.item__description}>\r\n                {props.description}\r\n            </div>\r\n            <div className={s.item__input}>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    defaultChecked={props.completed}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport s from './taskList.module.css';\r\nimport ListItem from './listItem/listItem'\r\n\r\nconst TaskList = (props) => {\r\n    let ToDoItem = props.arrListData.map(i => {\r\n            return (\r\n                <ListItem\r\n                    key={i.id}\r\n                    description={i.description}\r\n                    completed={i.completed}\r\n                />\r\n            )\r\n        }\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {ToDoItem}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\nimport s from './tasks.module.css';\r\nimport TaskList from './taskList/taskList'\r\n\r\n\r\n\r\nconst Tasks = (props) => {\r\n\r\n    const onAddTask = () => {\r\n        props.addTask();\r\n    }\r\n\r\n    let onTaskChange = (event) => {\r\n        let taskText = event.target.value;\r\n        props.updateNewTaskText(taskText);\r\n    }\r\n\r\n    return (\r\n        <div className='list'>\r\n            <div className='list__item'>\r\n                <TaskList arrListData={props.tasksPage.arrListData} />\r\n            </div>\r\n            <div>\r\n                <textarea\r\n                    value={props.tasksPage.newTaskText}\r\n                    placeholder='please, enter your message'\r\n                    onChange={onTaskChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={onAddTask}>Add task</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport {addTaskActionCreator, updateNewTaskTextActionCreator} from \"../../redux/reducers/tasksReducer\";\r\nimport Tasks from \"./tasks\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tasksPage: state.tasksPage\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addTask: () => {\r\n            dispatch(addTaskActionCreator())\r\n        },\r\n\r\n        updateNewTaskText: (taskText) => {\r\n            dispatch(updateNewTaskTextActionCreator(taskText))\r\n        }\r\n    }\r\n};\r\n\r\nconst TasksContainer = connect(mapStateToProps, mapDispatchToProps)(Tasks);\r\n\r\nexport default TasksContainer;","export default __webpack_public_path__ + \"static/media/loading.b5e6e4d8.svg\";","import React from 'react';\r\nimport s from './preloader.module.css';\r\nimport loading from \"../../assets/loading/loading.svg\";\r\n\r\n\r\nconst Preloader = () => {\r\n    return <div>\r\n\r\n        <img src={loading} alt={'loading'} />\r\n\r\n        {/*<div className={s.loading}>*/}\r\n        {/*    <div className={s.ld}>*/}\r\n        {/*        <div></div>*/}\r\n        {/*        <div></div>*/}\r\n        {/*        <div></div>*/}\r\n        {/*        <div></div>*/}\r\n        {/*        <div></div>*/}\r\n        {/*        <div></div>*/}\r\n        {/*        <div></div>*/}\r\n        {/*        <div></div>*/}\r\n        {/*        <div></div>*/}\r\n        {/*        <div></div>*/}\r\n        {/*        <div></div>*/}\r\n        {/*        <div></div>*/}\r\n        {/*    </div>*/}\r\n        {/*</div>*/}\r\n\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport s from './contacts.module.css';\r\nimport avatar from '../../assets/images/avatar.webp'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet Contacts = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div className={s.contacts__page}>\r\n            <div>\r\n                {pages.map(p => {\r\n                    return <span\r\n                        onClick={() => props.onPageChanged(p)}\r\n                        className={props.currentPage === p ? s.selectedPage : s.pageNumber}>\r\n                            {p}\r\n                        </span>\r\n                })\r\n                }\r\n            </div>\r\n\r\n            {props.arrUsers.map(c =>\r\n                <div key={c.id} className={s.community__item}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={`/profile/${c.id}`}>\r\n                                <img className={s.avatarCapture}\r\n                                    src={c.photos.small != null ? c.photos.small : avatar}\r\n                                    alt={'аватарка'}\r\n                                />\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {c.followed\r\n                                ? <button onClick={() => {\r\n                                    props.unFollow(c.id)\r\n                                }}>Unfollow</button>\r\n                                : <button onClick={() => {\r\n                                    props.follow(c.id)\r\n                                }}>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <span className={s.item__description}>\r\n                        <div className={s.item__name}>\r\n                            {c.name}\r\n                        </div>\r\n                        <div>\r\n                            <p>{c.status}</p>\r\n                            <p>id:{c.id}</p>\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    showContacts,\r\n    toggleIsFetching,\r\n    unFollow\r\n} from \"../../redux/reducers/contactsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport * as axios from \"axios\";\r\nimport Preloader from \"../preloader/preloader\";\r\nimport Contacts from \"./contacts\";\r\n\r\n\r\n\r\nclass ContactsContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(response.data.items)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <div>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n            </div>\r\n            <Contacts\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                arrUsers={this.props.arrUsers}\r\n                onPageChanged={this.onPageChanged}\r\n                follow={this.props.follow}\r\n                unFollow={this.props.unFollow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        arrUsers: state.contactsPage.arrUsers,\r\n        pageSize: state.contactsPage.pageSize,\r\n        totalUsersCount: state.contactsPage.totalUsersCount,\r\n        currentPage: state.contactsPage.currentPage,\r\n        isFetching: state.contactsPage.isFetching\r\n\r\n    }\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         showContacts: () => {\r\n//             dispatch(showContactAC());\r\n//         },\r\n//         follow: (id) => {\r\n//             dispatch(followAC(id));\r\n//         },\r\n//         unFollow: (id) => {\r\n//             dispatch(unFollowAC(id));\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users));\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber));\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount));\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//      }\r\n// };\r\n\r\nexport default connect(mapStateToProps, {\r\n        showContacts,\r\n        follow,\r\n        unFollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        toggleIsFetching\r\n    }\r\n)\r\n(ContactsContainer);","import React from 'react';\r\nimport s from './profileinfo.module.css';\r\nimport Preloader from \"../../preloader/preloader\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    } else {\r\n        return (\r\n            <div>\r\n                {/*<img className={s.profile__img} src='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f594d2c8-8757-4d98-bb17-fb3ddeeb9622/ephemeral-header01.jpg' alt='profilePicture'/>*/}\r\n                <div className={s.profileInfo}>\r\n                    <img className={s.photos__small} src={props.profile.photos.small} alt={'photos.small'}/>\r\n                    {props.profile.fullName}\r\n                </div>\r\n                <div className={s.profileInfo}>\r\n                    <img className={s.photos__large} src={props.profile.photos.large} alt={'photos.large'}/>\r\n                    contacts: {props.profile.contacts.github}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './myPosts.module.css';\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let onPostChange = (event) => {\r\n        props.updateNewPostText(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <textarea\r\n                    value={props.newPostText}\r\n                    placeholder='please, enter your message'\r\n                    onChange={onPostChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button className={s.button} onClick={() => props.addPost()}>Add post</button>\r\n            </div>\r\n            <div>\r\n                {props.arrPosts.map(p =>\r\n                    <div key={p.id} >\r\n                        <span className={s.post__item}>\r\n                            <img\r\n                                src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSSrsa7JI0Kur9LTDnCQ-N3ctRlKSJ9zzbOFw&usqp=CAU'\r\n                                alt='аватарка'/>\r\n                            <span className={s.post__text}>{p.post}</span>\r\n                        </span>\r\n                        <span>\r\n                            <button className={s.button} name='like'>\r\n                                {`Like (${p.likesCounte})`}\r\n                            </button>\r\n                        </span>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './profile.module.css';\r\nimport ProfileInfo from \"./profileInfo/profileInfo\";\r\nimport MyPosts from \"./myPosts/myPosts\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.profile}>\r\n                <ProfileInfo profile={props.profile} />\r\n            </div>\r\n            <div className={s.profile__posts}>\r\n                <MyPosts newPostText={props.newPostText}\r\n                         arrPosts={props.arrPosts}\r\n                         addPost={props.addPost}\r\n                         updateNewPostText={props.updateNewPostText}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./profile\";\r\nimport * as axios from 'axios';\r\nimport { addPost, setUserProfile, updateNewPostText } from \"../../redux/reducers/profileReduсer\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.id;\r\n        if (!userId) {\r\n            userId = 2;\r\n        }\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n            .then(response => {\r\n                this.props.setUserProfile(response.data);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile newPostText={this.props.newPostText}\r\n                         arrPosts={this.props.arrPosts}\r\n                         profile={this.props.profile}\r\n                         addPost={this.props.addPost}\r\n                         updateNewPostText={this.props.updateNewPostText}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        arrPosts: state.profilePage.arrPosts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile\r\n    }\r\n};\r\n\r\nconst WithUrlDataContainerComponent = withRouter(ProfileContainer);\r\nexport default connect(mapStateToProps, {addPost, updateNewPostText, setUserProfile})(WithUrlDataContainerComponent);","import React from 'react';\r\nimport s from './header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n   return (\r\n      <div className={s.menu}>\r\n         <div className={s.list}>\r\n            <a className={s.item} href='#'>Title 1</a>\r\n            <a className={s.item} href='#'>Title 2</a>\r\n            <a className={s.item} href='#'>Title 3</a>\r\n            <a className={s.item} href='#'>Title 4</a>\r\n         </div>\r\n          <div className={s.loginBlock}>\r\n              {props.isAuth ? props.login : <NavLink to={'/login'}>Login</NavLink> }\r\n          </div>\r\n      </div >\r\n   )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./header\";\r\nimport * as axios from 'axios';\r\nimport {connect} from \"react-redux\";\r\nimport {setAuthUserData} from \"../../redux/reducers/authReduсer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, { withCredentials: true })\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data\r\n                this.props.setAuthUserData(id, email, login); //наименования нужно брать из документации по API, но в том же порядке как и в редюсере\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n})\r\n\r\nexport default connect (mapStateToProps, {setAuthUserData})(HeaderContainer);","import React from 'react';\r\nimport s from './App.module.css';\r\nimport Sidebar from './components/sidebar/sidebar.jsx';\r\nimport News from \"./components/news/news\";\r\nimport Settings from \"./components/settings/settings\";\r\nimport {Route} from \"react-router-dom\";\r\nimport MessagesContainer from \"./components/messages/messagesContainer\";\r\nimport TasksContainer from \"./components/tasks/tasksContainer\";\r\nimport ContactsContainer from \"./components/contacts/contactsContainer\";\r\nimport ProfileContainer from \"./components/profile/profileContainer\";\r\nimport HeaderContainer from \"./components/header/headerContainer\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n            <div className={s.page}>\r\n                <div className={s.page__header}><HeaderContainer/></div>\r\n                <div className={s.page__sidebar}><Sidebar/></div>\r\n                <div className={s.page__content}>\r\n                    {/*<Route path='/login' render={()=> <LoginPage />}/>*/}\r\n                    <Route path='/profile/:id?' render={()=> <ProfileContainer />}/>\r\n                    <Route path='/contacts' render={()=> <ContactsContainer />}/>\r\n                    <Route path='/messages' render={()=> <MessagesContainer />}/>\r\n                    <Route path='/tasks' render={()=> <TasksContainer />}/>\r\n                    <Route path='/news' render={ ()=> <News />}/>\r\n                    <Route path='/settings' render={()=> <Settings />}/>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport './index.css'\r\nimport store from \"./redux/store\";\r\nimport App from \"./App\";\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n    ReactDOM.render(\r\n        <BrowserRouter >\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root'));"],"sourceRoot":""}